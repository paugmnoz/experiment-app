{"version":3,"sources":["store/TaggingStore.ts","components/IdentifySoundB/IdentifySoundB.tsx","components/IdentifySoundA/IdentifySoundA.tsx","store/DashboardStore.ts","components/CompareAudiosB/CompareAudiosB.tsx","components/CompareAudiosA/CompareAudiosA.tsx","components/SpectroEditorB/SpectroEditorB.tsx","components/SpectroEditorA/SpectroEditorA.tsx","components/TestDashboard/TestDashboard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["taggingStore","x","y","this","posXCard","posYCard","playingAudio","e","audioPos","originalArgs","commonName","sciName","observable","action","IdentifySoundB","observer","props","className","src","alt","onClick","showTagOption","console","log","id","style","top","left","display","flexDirection","birdClick","width","type","value","React","IdentifySoundA","dashboardStore","atom","start","performance","now","isCounting","data","actualComponentData","duration","clicks","end","_atom","actualAtom","_duration","_clicks","atomClicks","push","atomIndex","temp_atom","atomList","Array","CompareAudiosB","url","height","position","CompareAudiosA","SpectroEditorB","SpectroEditorA","TestDashboard","downloadTxtFile","element","document","createElement","file","Blob","JSON","stringify","href","URL","createObjectURL","download","body","appendChild","click","nativeEvent","offsetX","offsetY","setMousePos","onMouseMove","_onMouseMove","bind","handleEnd","handleStart","handleNext","App","addEventListener","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.964a88f8.chunk.js","sourcesContent":["import { observable, action, computed } from 'mobx';\n\nclass TaggingStore {\n    @observable playingAudio = false;\n    @observable audioPos = 0;\n\n    @observable posXCard = 0;\n    @observable posYCard = 0;\n\n    @observable commonName = ''\n    @observable sciName = ''\n\n    @action setMousePos(x: any, y: any) {\n        this.posXCard = x;\n        this.posYCard = y;\n    }\n\n    @action handleTogglePlay() {\n          this.playingAudio = !this.playingAudio;\n      }\n    \n    @action handlePosChange(e:any) {\n          this.audioPos = e.originalArgs[0]\n      }\n    @action birdClick(){\n        this.commonName = 'Hormiguero de Zeledón'\n        this.sciName = 'Hafferia zeledoni'\n    }\n}\n\n\n\nexport const taggingStore = new TaggingStore();","/*require('wavesurfer.js');*/\n\nimport * as React from 'react';\nimport { taggingStore } from '../../store/TaggingStore';\nimport './IdentifySoundB.scss';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { relative, isAbsolute } from 'path';\n/*import Wavesurfer from 'react-wavesurfer';*/\n\n\n\n@observer export class IdentifySoundB extends React.Component {\n\n    @observable showTagOption = false;\n    @observable posXCard: any;\n    @observable posYCard: any;\n\n    constructor(props) {\n        super(props);\n \n      }\n\n    render() {\n        return <section >\n            <div className=\"card-header\">\n                <h1>Selección</h1>\n                <img className=\"close-icon\" src=\"./assets/icons/close.svg\" alt=\"\" />\n            </div>\n            <div className=\"card-section\">\n                {/*<Wavesurfer\n          audioFile={'./assets/Anchicaya_LaLocaTrocha_2019.06.22_07.50.35_1.mp3'}\n          pos={taggingStore.audioPos}\n          onPosChange={taggingStore.handlePosChange}\n          playing={taggingStore.playingAudio}\n            />*/}\n                <img className=\"spectro\"  \n                src=\"./assets/espectogramaB.png\" alt=\"\" onClick={() => {\n                    this.showTagOption = !this.showTagOption;\n                    this.posXCard = taggingStore.posXCard;\n                    this.posYCard = taggingStore.posYCard;\n                    console.log('printing');\n                }} />\n            </div>\n            {(this.showTagOption)\n                ? <div className=\"card-section\" id=\"card-for-tagging\" \n                style={{\n                    top: this.posYCard,\n                    left: this.posXCard,\n                }}>\n                    <span className=\"description-items-row\">\n                        <p><span className=\"text-title\">Fecha:</span> 28 Julio 2019</p>\n                        <p><span className=\"text-title\">Hora:</span> 06:36 AM</p>\n                        <p><span className=\"text-title\">Duración:</span> 5s</p>\n                    </span>\n                    <div className=\"card-item\" style={{\n                        display: 'flex',\n                        flexDirection: 'column'\n                    }}>\n                        <p>Especies estudiando</p>\n                        <img src=\"./assets/Birds.png\" \n                        onClick={() => { \n                            taggingStore.birdClick()\n                        } }\n                        alt=\"\" className=\"img-birds\" width=\"246\"></img>\n                    </div>\n                    <span className=\"input-row card-item\">\n                        <span className=\"input-col \"> <p className=\"text-title\"> Nombre Común:</p> <input type=\"text\" value={taggingStore.commonName} /></span>\n                        <span className=\"input-col \"> <p className=\"text-title\"> Nombre Científico:</p> <input type=\"text\" value={taggingStore.sciName} /></span>\n                    </span>\n                    <span className=\"input-row card-item\">\n                        <p className=\"text-title\">Tipo de canto:</p>\n                        <select>\n                            <option>Canto</option>\n                            <option>Llamador</option>\n                            <option>Cortejo</option>\n                        </select>\n                    </span>\n                    <span className=\"input-col card-item\"> <p className=\"text-title\"> Anotación/Comentario:</p> <input type=\"text\" /></span>\n                    <p className=\"card-item\">Marcar como:</p>\n                    <label className=\"card-item\"><input type=\"checkbox\" id=\"myCheck\"></input>Seguro</label>\n                    <label className=\"card-item\"><input type=\"checkbox\" id=\"myCheck\"></input>Pendiente</label>\n                    <label className=\"card-item\"><input type=\"checkbox\" id=\"myCheck\"></input>Duda</label>\n                    <div className=\"btns\">\n                        <button className=\"green-button\" style={{}}>Guardar</button>\n                    </div>\n                </div>\n                : ''}\n           <div className=\"card-section\">\n                <p className=\"hint-text\">¿Alguna duda sobre el canto? Verifica con cantos de Xeno-Canto</p>\n                <span className=\"input-row search card-item\">\n                    <p className=\"text-title\">Buscar en Xeno-Canto:</p> <input type=\"text\" />\n                    <button className=\"green-button\">Buscar</button>\n                </span>\n            </div>\n        </section>\n    }\n}","import * as React from 'react';\r\nimport './IdentifySoundA.scss';\r\nimport { taggingStore } from '../../store/TaggingStore';\r\n\r\n\r\nexport class IdentifySoundA extends React.Component {\r\n\r\n    render(){\r\n        return <section>  \r\n            <div className=\"card-header\">\r\n                <h1>Selección</h1>\r\n                <img className=\"close-icon\" src=\"./assets/icons/close.svg\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"card-section\">\r\n            <img src=\"./assets/espectogramaB.png\" alt=\"\" />\r\n      { /*     <Wavesurfer\r\n          audioFile={'./assets/Anchicaya_LaLocaTrocha_2019.06.22_07.50.35_1.mp3'}\r\n          pos={taggingStore.audioPos}\r\n          onPosChange={taggingStore.handlePosChange}\r\n    playing={taggingStore.playingAudio}/>*/}\r\n        \r\n            </div>\r\n            <div className=\"card-section\">\r\n                <span className=\"description-items-row\">\r\n                <p><span className=\"text-title\">Fecha:</span> 28 Julio 2019</p>\r\n                <p><span className=\"text-title\">Hora:</span> 06:36 AM</p>\r\n                <p><span className=\"text-title\">Duración:</span> 5s</p>\r\n                </span>\r\n          \r\n            <div className=\"form-section\">\r\n                <span>\r\n\r\n                <span className=\"input-row card-item\">\r\n                <p className=\"text-title\">Especie:</p> <input type=\"text\"/>\r\n            </span>\r\n            <span className=\"input-row card-item\">\r\n                <p className=\"text-title\">Tipo de canto:</p> \r\n                <select>\r\n                <option>Canto</option>\r\n                <option>Llamador</option>\r\n                <option>Cortejo</option>\r\n                </select>\r\n            </span>\r\n            <p className=\"green-link card-item\">Agregar anotación o comentario</p>\r\n                </span>\r\n            <span className=\"actions\">\r\n                <p>Marcar como:</p>\r\n                <select>\r\n                <option>Pendiente</option>\r\n                <option>Duda</option>\r\n                <option>Seguro</option>\r\n                </select>\r\n                <br/>\r\n                <br/>\r\n                <button className=\"dark-button\">Guardar</button>\r\n            </span>\r\n            </div>\r\n          \r\n            </div>\r\n            <div className=\"card-section\">\r\n                <p className=\"hint-text\">¿Alguna duda sobre el canto? Verifica con cantos de Xeno-Canto</p>\r\n                <span className=\"input-row search card-item\">\r\n                <p className=\"text-title\">Buscar en Xeno-Canto:</p> <input type=\"text\"/>\r\n                <button className=\"green-button\">Buscar</button>\r\n                </span>\r\n            </div>\r\n        </section>\r\n    }\r\n}","import { observable, action, computed, flow } from 'mobx';\r\n\r\nclass DashboardStore {\r\n  @observable atomList = [ '1A', '1B', '2A', '2B', '3A', '3B' ]\r\n  //@observable atomList = [ '1B', '1A', '2B', '2A', '3B', '3A' ]\r\n  @observable atomIndex = 0;\r\n    @observable actualComponentData = { atom: '1A', duration: 0, clicks: 0}\r\n\r\n    @observable atomClicks = 0;\r\n    @observable actualAtom = '1A'\r\n//    @observable actualAtom = '1B'\r\n    @observable start = 0;\r\n    @observable end = 0;\r\n    @observable duration = 0;\r\n\r\n    @observable isCounting = false;\r\n    @observable data = Array()\r\n\r\n    @action handleStart(atom:string) {\r\n        this.start = performance.now();\r\n        console.log(this.start)\r\n        this.isCounting = true;\r\n      }\r\n    @action handleEnd(atom:string) {\r\n        this.isCounting = false;\r\n        this.data = this.data;\r\n        this.actualComponentData = { atom:'', duration: 0, clicks: 0}\r\n\r\n        this.end = performance.now();  \r\n\r\n        let _atom:string = this.actualAtom;\r\n        let _duration:number = (this.end - this.start)/1000\r\n        let _clicks:number = this.atomClicks;\r\n        this.data.push(this.actualComponentData = { atom: _atom, duration: _duration, clicks: _clicks})\r\n\r\n        console.log('data', this.data)\r\n\r\n      }\r\n    @action handleNext(atom:string){\r\n      this.atomIndex += 1;\r\n      console.log(this.atomIndex)\r\n      let temp_atom = this.atomList[this.atomIndex]\r\n      this.actualAtom = temp_atom;\r\n      console.log(this.actualAtom)\r\n      this.start = 0;\r\n      this.end = 0;\r\n      this.duration = 0;\r\n      this.atomClicks = 0;\r\n      this.isCounting = false;\r\n    }\r\n}\r\n\r\nexport const dashboardStore = new DashboardStore();\r\n","import * as React from 'react';\r\nimport './CompareAudiosB.scss';\r\nimport Iframe from 'react-iframe'\r\n\r\nexport class CompareAudiosB extends React.Component {\r\n\r\n    render(){\r\n        return <div>  \r\n               <Iframe url=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Fproto%2FmHHdlqPuwYLGhb1ADJEIna%2FSprint-4%3Fnode-id%3D44%253A1417%26scaling%3Dscale-down-width\"\r\n                width=\"1200px\"\r\n                height=\"552px\"\r\n                id=\"myId\"\r\n                className=\"myClassname\"\r\n                position=\"relative\"/>\r\n        </div>\r\n    }\r\n}","import * as React from 'react';\r\nimport './CompareAudiosA.scss';\r\nimport Iframe from 'react-iframe'\r\n\r\nexport class CompareAudiosA extends React.Component {\r\n\r\n    render(){\r\n        return <div>  \r\n               <Iframe url=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Fproto%2FmHHdlqPuwYLGhb1ADJEIna%2FSprint-4%3Fnode-id%3D38%253A178%26scaling%3Dscale-down-width\"\r\n                width=\"1200px\"\r\n                height=\"552px\"\r\n                id=\"myId\"\r\n                className=\"myClassname\"\r\n                position=\"relative\"/>\r\n        </div>\r\n    }\r\n}","import * as React from 'react';\r\nimport './SpectroEditorB.scss';\r\nimport Iframe from 'react-iframe'\r\n\r\nexport class SpectroEditorB extends React.Component {\r\n\r\n    render(){\r\n        return <div>  \r\n        <Iframe url=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Fproto%2FmHHdlqPuwYLGhb1ADJEIna%2FSprint-4%3Fnode-id%3D44%253A1042%26scaling%3Dscale-down-width\"\r\n        width=\"1200px\"\r\n        height=\"615px\"\r\n        id=\"embed\"\r\n        className=\"myClassname\"\r\n        position=\"relative\"/>\r\n        </div>\r\n    }\r\n}","import * as React from 'react';\r\nimport './SpectroEditorA.scss';\r\nimport Iframe from 'react-iframe'\r\n\r\nexport class SpectroEditorA extends React.Component {\r\n    render(){\r\n        return <div>  \r\n        <Iframe url=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Fproto%2FmHHdlqPuwYLGhb1ADJEIna%2FSprint-4%3Fnode-id%3D43%253A1348%26scaling%3Dscale-down-width\"\r\n        width=\"1200px\"\r\n        height=\"615px\"\r\n        id=\"embed\"\r\n        className=\"myClassname\"\r\n        position=\"relative\"/>\r\n        </div>\r\n    }\r\n}","import * as React from 'react';\nimport './TestDashboard.scss';\nimport { IdentifySoundB } from '../../components/IdentifySoundB/IdentifySoundB';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { taggingStore } from '../../store/TaggingStore'\nimport { IdentifySoundA } from '../IdentifySoundA/IdentifySoundA';\nimport { dashboardStore } from '../../store/DashboardStore';\nimport { CompareAudiosB } from '../CompareAudiosB/CompareAudiosB';\nimport { CompareAudiosA } from '../CompareAudiosA/CompareAudiosA';\nimport { SpectroEditorB } from '../SpectroEditorB/SpectroEditorB';\nimport { SpectroEditorA } from '../SpectroEditorA/SpectroEditorA';\n\n@observer export class TestDashboard extends React.Component {\n\n    @observable x = 0;\n    @observable y = 0;\n    downloadTxtFile = () => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([JSON.stringify(dashboardStore.data)], {type: 'text/plain'});\n        element.href = URL.createObjectURL(file);\n        element.download = \"myFile.txt\";\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n      }\n    constructor(props) {\n        super(props);\n \n      }\n    _onMouseMove(e) {\n        this.x = e.nativeEvent.offsetX;\n        this.y = e.nativeEvent.offsetY;\n\n        console.log(this.x, this.y);\n        taggingStore.setMousePos(this.x, this.y);\n     }\n\n     \n    render(){\n        return <div className=\"cont\" onMouseMove={this._onMouseMove.bind(this)}>\n            <div className=\"soft-handlers\">\n                <h1>ATOMO: {dashboardStore.actualAtom}</h1>\n                {\n                    (!dashboardStore.isCounting) ? ( <button onClick={() => dashboardStore.handleStart('a')}>Empezar</button> ) :\n                    (<button  onClick={() => dashboardStore.handleEnd('a')}>He terminado</button>)\n                }\n                <button className=\"save\"  onClick={this.downloadTxtFile}>guardar</button>\n                <button className=\"next\" onClick={() => dashboardStore.handleNext('a')}>Siguiente</button>\n            </div>\n            {\n               (dashboardStore.actualAtom == '1A') ? (\n                    <div className=\"SpectroA atom\">\n                    <SpectroEditorA></SpectroEditorA>\n                    </div>\n                   ) : (dashboardStore.actualAtom == '1B') ? (\n                    <div className=\"SpectroA atom\">\n                    <SpectroEditorB/>\n                    </div>\n                ): (dashboardStore.actualAtom == '2A') ? (\n                    <div className=\"SpectroA atom\">\n                    <CompareAudiosA/>\n                    </div>\n                ): (dashboardStore.actualAtom == '2B') ? (\n                    <div className=\"SpectroA atom\">\n                    <CompareAudiosB/>\n                    </div>\n                ): (dashboardStore.actualAtom == '3A') ? (\n                    <div className=\"identifySoundA atom\">\n                    <IdentifySoundA/>\n                    </div>\n                ): (dashboardStore.actualAtom == '3B') ? (\n                    <div className=\"identifySoundA atom\">\n                    <IdentifySoundB/>\n                    </div>\n                ):('TERMINAMOS')\n                \n            }     \n        </div>\n    }\n}","import React, { Component } from 'react';\n\nimport './App.scss';\nimport { TestDashboard } from './components/TestDashboard/TestDashboard';\nimport { dashboardStore } from './store/DashboardStore';\nimport { observer } from \"mobx-react\";\n\n@observer\nexport default class App extends React.Component {\n  \n  render(){\n    document.body.addEventListener('click', () => {\n      dashboardStore.atomClicks++;\n      console.log(dashboardStore.atomClicks)\n  }, true)\n      return <TestDashboard></TestDashboard>\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}